{"version":3,"sources":["serviceWorker.js","cognito/cognito.js","components/NewPwdModal.js","components/VerificationCodeModal.js","components/ForgotPwd.js","components/signin.js","actions/sessionActions.js","components/dashBoard/dashboard.js","components/main/main.js","App.js","reducers/sessionReducer.js","reducers/index.js","configureStore.js","index.js"],"names":["Boolean","window","location","hostname","match","userPool","CognitoUserPool","config","authenticateUser","username","password","callback","authData","Username","Password","authDetails","AuthenticationDetails","userData","Pool","cognitoUser","CognitoUser","onSuccess","result","onFailure","err","newPasswordRequired","userAttributes","console","log","newPwd","newPassword","email_verified","name","preferred_username","completeNewPasswordChallenge","AWS","Credentials","accessKeyId","AWS_ACCESS_KEY","secretAccessKey","AWS_SECRET_KEY","sessionToken","refresh","forgotpassword","r","forgotPassword","inputVerificationCode","this","requiredVerificationCode","verificationCode","sth","confirmPassword","NewPwdModal","state","show","ConfirmPassword","showPassword","ok","handleSave","document","getElementById","value","confirmpassword","_this","style","borderColor","visibility","setState","password_policy","props","checkPasswordPolicy","e","testResult","test","target","color","checkConfirmPassword","handleChangePassword","handleChangeConfirmPassword","handleClose","handleShow","id","type","react_default","a","createElement","className","Modal","onHide","Header","Title","Body","FormGroup","FormLabel","Row","Col","md","FormControl","onChange","onKeyUp","Feedback","Footer","Button","onClick","Component","verificationCodeModal","forgotpwd_username","forgotpwd_password","forgotpwd_user_ok","pass_policy","handleSend","passcode_1","passcode_2","passcode_3","passcode_4","passcode_5","passcode_6","pwd_inputText","con_pwd_inputText","length","innerHTML","handleSaveNewPassword","getCode","handleChangeNewPassword","val","resendVerificationCode","handleCode","placeholder","maxLength","ForgotPwd","codemistmatch","usernotfound","LimitExceeded","code","showVerificationModal","v","verficationCode","handleChangeUsername","_this2","VerificationCodeModal","ref","api","require","Signin","error","save","usernameValue","passwordValue","componentDidMount","Object","assertThisInitialized","rememberMe","usernameInput","passwordInput","idToken","history","push","currentPage","authorizeUserPool","bind","onUsernameChange","onPasswordChange","authUser","requireNewPassword","getIdToken","getJwtToken","checkLogin","preventDefault","axios","get","webUserManagment","headers","then","roleName","data","response","productRoles","map","product","productName","setUserInfo","allUsers","userInformation","setIDToken","catch","n","alert","f","message","setRememberMe","checked","render","enabled","components_NewPwdModal","components_ForgotPwd","handleSaveChangePassword","paddingLeft","xs","sm","lg","Card","iframe","url","width","height","display","position","Text","variant","Form","maxWidth","Label","Group","Control","onKeyDown","getUsername","defaultValue","getPassword","as","Check","label","defaultChecked","disabled","connect","_state$sessionReducer","sessionReducer","dispatch","DashApp","collapsed","saveCookie","onCollapse","href","products","App","react_router_dom","react_router","path","dashboard","assign","loadCookie","component","initialState","userId","dbName","companyName","arguments","undefined","action","objectSpread","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","reducer","configureStore","store","createStore","persistor","persistStore","CrossStorageClient","aurora_url","_callee","getKey","regenerator_default","wrap","_context","prev","next","onConnect","abrupt","stop","ReactDOM","es","integration_react","loading","src_App_0","set"],"mappings":"06BAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2OCVAC,EAAW,IAAIC,IAAgBC,GAqDxBC,EAAmB,SAACC,EAAUC,EAAUC,GACjD,IAAMC,EAAW,CACbC,SAAUJ,EACVK,SAAUJ,GAERK,EAAc,IAAIC,IAAsBJ,GACxCK,EAAW,CACbJ,SAAUJ,EACVS,KAAMb,GAEJc,EAAc,IAAIC,IAAYH,GACpCE,EAAYX,iBAAiBO,EAAa,CACtCM,UAAW,SAAAC,GAGPX,EAAS,KAAMW,IAEnBC,UAAW,SAAAC,GACPb,EAASa,IAEbC,oBAAqB,SAACC,GAClBC,QAAQC,IAAIT,GACZQ,QAAQC,IAAI,KAAKF,GACjBf,EAAS,KAAK,KAAKe,EAAeP,OAMjCU,EAAS,SAACpB,EAASC,EAASoB,EAAYJ,EAAeP,EAAYR,GAC5EgB,QAAQC,IAAI,mBAAmBF,GAEvBC,QAAQC,IAAIF,UACLA,EAAeK,eAEtBL,EAAeM,KAAOvB,EACtBiB,EAAeO,mBAAqBxB,EAGpCkB,QAAQC,IAAIT,GACZQ,QAAQC,IAAI,WAAYnB,GACxBkB,QAAQC,IAAI,WAAYlB,GACxBiB,QAAQC,IAAI,cAAeE,GAC3BH,QAAQC,IAAI,iBAAkBF,GAE1BP,EAAYe,6BAA6BJ,EAAaJ,EAAgB,CAClEL,UAAW,SAAAC,GACK,IAAIa,IAAIC,YAAY,CAC9BC,YAAa9B,EAAO+B,eAAgBC,gBAAiBhC,EAAOiC,eAAgBC,aAAc,OAEtFC,QAAQ,SAAAlB,GACV,GAAIA,EACA,MAAMA,EAGNG,QAAQC,IAAI,2BAA6BN,GACzCX,EAAS,KAAKW,MAK1BC,UAAW,SAAAC,GACPG,QAAQC,IAAIJ,GACZb,EAAS,UAuCpBgC,EAAiB,SAAClC,EAAUE,GACrC,IAAIM,EAAW,CACXJ,SAAUJ,EACVS,KAAMb,GAENuC,EAAI,GACJzB,EAAc,IAAIC,IAAYH,GAClCE,EAAY0B,eAAe,CACvBxB,UAAW,SAAAC,GACPK,QAAQC,IAAIN,GACZsB,EAAItB,EACJX,EAAS,KAAMW,EAAOH,IAE1BI,UAAW,SAAAC,GACPG,QAAQC,IAAIJ,GACZb,EAASa,EAAK,KAAKL,IAEvB2B,sBAVuB,WAWnBnC,EAAS,KAAMiC,EAAEzB,EAAY4B,UAU5BC,EAA2B,SAACC,EAAiBnB,EAAYX,EAAY+B,GAC9E/B,EAAYgC,gBAAgBF,EAAkBnB,EAAaoB,gDC/BhDE,6MA3JXC,MAAQ,CACJC,MAAM,EACNxC,SAAU,GACVyC,gBAAiB,GACjBC,cAAc,EACdC,IAAI,KAGRC,WAAa,WACT,IAAIhD,EAAWiD,SAASC,eAAe,iBAAiBC,MACpDC,EAAkBH,SAASC,eAAe,qBAAqBC,MAC/DJ,EAAKM,EAAKV,MAAMI,GAChB/C,IAAaoD,GACbH,SAASC,eAAe,qBAAqBI,MAAMC,YAAc,MACjEN,SAASC,eAAe,iBAAiBI,MAAME,WAAa,UAC5DH,EAAKI,SAAS,CACVV,IAAI,IAERA,GAAK,IAELE,SAASC,eAAe,iBAAiBI,MAAME,WAAa,SAC5DP,SAASC,eAAe,qBAAqBI,MAAMC,YAAc,WAC/B,IAA/BF,EAAKV,MAAMe,kBACVX,GAAK,KAIF,IAAPA,GACAM,EAAKM,MAAMX,gBAOnBY,oBAAsB,SAACC,GACnB,IAEIC,EAFS,sCAEWC,KAAKF,EAAEG,OAAOb,OAEtCE,EAAKI,SAAS,CAAEC,gBAAiBI,IAE5BA,GAODb,SAASC,eAAe,aAAaI,MAAMW,MAAQ,UACnDhB,SAASC,eAAe,iBAAiBI,MAAMC,YAAc,YAP7DN,SAASC,eAAe,aAAaI,MAAMW,MAAQ,MACnDhB,SAASC,eAAe,iBAAiBI,MAAMC,YAAc,MAC7DF,EAAKI,SAAS,CACVV,IAAI,QAQhBmB,qBAAuB,WACJjB,SAASC,eAAe,iBAAiBC,QAClCF,SAASC,eAAe,qBAAqBC,OAG/DF,SAASC,eAAe,qBAAqBI,MAAMC,YAAc,MACjEN,SAASC,eAAe,iBAAiBI,MAAME,WAAa,UAC5DH,EAAKI,SAAS,CACVV,IAAI,MAGRE,SAASC,eAAe,iBAAiBI,MAAME,WAAa,SAC5DP,SAASC,eAAe,qBAAqBI,MAAMC,YAAc,cAKzEY,qBAAuB,SAACN,GAAD,OAAOR,EAAKM,MAAMQ,qBAAqBN,MAE9DO,4BAA8B,SAACP,GAAD,OAAOR,EAAKM,MAAMS,4BAA4BP,MAE5EQ,YAAc,kBAAMhB,EAAKI,SAAS,CAAEb,MAAM,OAE1C0B,WAAa,kBAAMjB,EAAKI,SAAS,CAAEb,MAAM,OAEzCE,aAAe,SAACe,IACoB,IAA5BR,EAAKV,MAAMG,cACS,gBAAhBe,EAAEG,OAAOO,GACTtB,SAASC,eAAe,iBAAiBsB,KAAO,OAEhDvB,SAASC,eAAe,qBAAqBsB,KAAO,OAGxDnB,EAAKI,SAAS,CAAEX,cAAc,MAEV,gBAAhBe,EAAEG,OAAOO,GACTtB,SAASC,eAAe,iBAAiBsB,KAAO,WAEhDvB,SAASC,eAAe,qBAAqBsB,KAAO,WAExDnB,EAAKI,SAAS,CAAEX,cAAc,8EAKlC,OAAQ2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACnBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOjC,KAAMP,KAAKM,MAAMC,KAAMkC,OAAQzC,KAAKgC,YAAaO,UAAU,UAC9DH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAACE,EAAA,EAAME,OAAP,KACIN,EAAAC,EAAAC,cAACE,EAAA,EAAMG,MAAP,CAAaT,GAAG,aAAhB,wBAEJE,EAAAC,EAAAC,cAACE,EAAA,EAAMI,KAAP,KACIR,EAAAC,EAAAC,cAAA,OAAKJ,GAAG,aAAR,0BAC2BE,EAAAC,EAAAC,cAAA,WAD3B,+BAEgCF,EAAAC,EAAAC,cAAA,WAFhC,uBAGwBF,EAAAC,EAAAC,cAAA,YAExBF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACIT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAWP,UAAU,aAArB,YACAH,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACIX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKC,GAAI,IACLb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAaX,UAAU,YACnBL,GAAG,gBACHC,KAAK,WACLrB,MAAOd,KAAKM,MAAMQ,MAClBqC,SAAUnD,KAAK8B,qBACfsB,QAASpD,KAAKuB,sBAClBa,EAAAC,EAAAC,cAACY,EAAA,EAAYG,SAAb,SAIZjB,EAAAC,EAAAC,cAAA,OAAKJ,GAAG,iBAAR,yBACAE,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACIT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAWP,UAAU,aAArB,oBACAH,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACIX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKC,GAAI,IACLb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAaX,UAAU,YACnBL,GAAG,oBACHC,KAAK,WACLrB,MAAOd,KAAKM,MAAMQ,MAClBqC,SAAUnD,KAAK+B,4BACfqB,QAASpD,KAAK6B,uBAClBO,EAAAC,EAAAC,cAACY,EAAA,EAAYG,SAAb,WAOpBjB,EAAAC,EAAAC,cAACE,EAAA,EAAMc,OAAP,KACIlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQC,QAASxD,KAAKgC,YAAaE,GAAG,kBAAtC,SACAE,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQC,QAASxD,KAAKW,WAAYuB,GAAG,kBAArC,mBApJEuB,aC4VXC,6MA3VXpD,MAAQ,CACJC,MAAM,EACNoD,mBAAoB,GACpBC,mBAAoB,GACpBC,mBAAmB,EACnBnD,IAAI,EACJoD,aAAa,EACbzG,OAAO,KAGX0G,WAAa,WACT,IAAIC,EAAapD,SAASC,eAAe,cAAcC,MACnDmD,EAAarD,SAASC,eAAe,cAAcC,MACnDoD,EAAatD,SAASC,eAAe,cAAcC,MACnDqD,EAAavD,SAASC,eAAe,cAAcC,MACnDsD,EAAaxD,SAASC,eAAe,cAAcC,MACnDuD,EAAazD,SAASC,eAAe,cAAcC,MACnDwD,EAAgB1D,SAASC,eAAe,iBAAiBC,MACzDyD,EAAoB3D,SAASC,eAAe,qBAAqBC,MAC5C,IAAtBkD,EAAWQ,QACV5D,SAASC,eAAe,cAAcI,MAAMC,YAAc,MAC1DF,EAAKI,SAAS,CACVV,IAAI,MAGRE,SAASC,eAAe,cAAcI,MAAMC,YAAc,UAC1DF,EAAKI,SAAS,CACVV,IAAI,KAGc,IAAtBuD,EAAWO,QACX5D,SAASC,eAAe,cAAcI,MAAMC,YAAc,MAC1DF,EAAKI,SAAS,CACVV,IAAI,MAGRE,SAASC,eAAe,cAAcI,MAAMC,YAAc,UAC1DF,EAAKI,SAAS,CACVV,IAAI,KAGc,IAAtBwD,EAAWM,QACX5D,SAASC,eAAe,cAAcI,MAAMC,YAAc,MAC1DF,EAAKI,SAAS,CACVV,IAAI,MAGRE,SAASC,eAAe,cAAcI,MAAMC,YAAc,UAC1DF,EAAKI,SAAS,CACVV,IAAI,KAGc,IAAtByD,EAAWK,QACX5D,SAASC,eAAe,cAAcI,MAAMC,YAAc,MAC1DF,EAAKI,SAAS,CACVV,IAAI,MAGRE,SAASC,eAAe,cAAcI,MAAMC,YAAc,UAC1DF,EAAKI,SAAS,CACVV,IAAI,KAGc,IAAtB0D,EAAWI,QACX5D,SAASC,eAAe,cAAcI,MAAMC,YAAc,MAC1DF,EAAKI,SAAS,CACVV,IAAI,MAGRE,SAASC,eAAe,cAAcI,MAAMC,YAAc,UAC1DF,EAAKI,SAAS,CACVV,IAAI,KAGc,IAAtB2D,EAAWG,QACX5D,SAASC,eAAe,cAAcI,MAAMC,YAAc,MAC1DF,EAAKI,SAAS,CACVV,IAAI,MAGRE,SAASC,eAAe,cAAcI,MAAMC,YAAc,UAC1DF,EAAKI,SAAS,CACVV,IAAI,KAIgB,IAAzB4D,EAAcE,SAA2C,IAA3BxD,EAAKV,MAAMwD,aACxClD,SAASC,eAAe,iBAAiBI,MAAMC,YAAc,MAC7DN,SAASC,eAAe,iBAAiB4D,UAAY,sEACrD7D,SAASC,eAAe,iBAAiBI,MAAME,WAAa,UAC5DH,EAAKI,SAAS,CACVV,IAAI,MAGRE,SAASC,eAAe,iBAAiBI,MAAMC,YAAc,UAC7DF,EAAKI,SAAS,CACVV,IAAI,KAIoB,IAA7B6D,EAAkBC,QACjB5D,SAASC,eAAe,qBAAqBI,MAAMC,YAAc,MACjEF,EAAKI,SAAS,CACVV,IAAI,MAGRE,SAASC,eAAe,qBAAqBI,MAAMC,YAAc,UACjEF,EAAKI,SAAS,CACVV,IAAI,KAIR4D,IAAkBC,GACd3D,SAASC,eAAe,iBAAiB4D,UAAY,wBACrD7D,SAASC,eAAe,qBAAqBI,MAAMC,YAAc,MACjEN,SAASC,eAAe,iBAAiBI,MAAME,WAAa,UAC5DH,EAAKI,SAAS,CACV/D,OAAO,MAGXuD,SAASC,eAAe,qBAAqBI,MAAMC,YAAc,UACjEF,EAAKI,SAAS,CACV/D,OAAO,GACT2D,EAAK0D,6BAGnBA,sBAAwB,WACpB,IAAqB,IAAlB1D,EAAKV,MAAMI,KAAoC,IAArBM,EAAKV,MAAMjD,QAA6C,IAA3B2D,EAAKV,MAAMwD,YAAqB,CACtF,IAAIE,EAAapD,SAASC,eAAe,cAAcC,MACnDmD,EAAarD,SAASC,eAAe,cAAcC,MACnDoD,EAAatD,SAASC,eAAe,cAAcC,MACnDqD,EAAavD,SAASC,eAAe,cAAcC,MACnDsD,EAAaxD,SAASC,eAAe,cAAcC,MACnDuD,EAAazD,SAASC,eAAe,cAAcC,MACvDE,EAAKM,MAAMqD,QAAQX,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,OAI5FO,wBAA0B,SAACpD,GAAD,OAAOR,EAAKM,MAAMsD,wBAAwBpD,MAEpEQ,YAAc,kBAAMhB,EAAKI,SAAS,CAAEb,MAAM,OAE1C0B,WAAa,SAAC4C,GACV7D,EAAKI,SAAS,CAAEb,MAAM,KACV,IAARsE,IACAjE,SAASC,eAAe,cAAcI,MAAMC,YAAc,MAC1DN,SAASC,eAAe,cAAcI,MAAMC,YAAc,MAC1DN,SAASC,eAAe,cAAcI,MAAMC,YAAc,MAC1DN,SAASC,eAAe,cAAcI,MAAMC,YAAc,MAC1DN,SAASC,eAAe,cAAcI,MAAMC,YAAc,MAC1DN,SAASC,eAAe,cAAcI,MAAMC,YAAc,MAC1DN,SAASC,eAAe,iBAAiBI,MAAME,WAAa,cAIpE2D,uBAAyB,kBAAM9D,EAAKM,MAAMyC,gBAE1CgB,WAAa,WACTnE,SAASC,eAAe,cAAcI,MAAMC,YAAc,UAC1DN,SAASC,eAAe,cAAcI,MAAMC,YAAc,UAC1DN,SAASC,eAAe,cAAcI,MAAMC,YAAc,UAC1DN,SAASC,eAAe,cAAcI,MAAMC,YAAc,UAC1DN,SAASC,eAAe,cAAcI,MAAMC,YAAc,UAC1DN,SAASC,eAAe,cAAcI,MAAMC,YAAc,aAG9DT,aAAe,SAACe,IACoB,IAA5BR,EAAKV,MAAMG,cAES,gBAAhBe,EAAEG,OAAOO,GACTtB,SAASC,eAAe,iBAAiBsB,KAAO,OAEhDvB,SAASC,eAAe,qBAAqBsB,KAAO,OAGxDnB,EAAKI,SAAS,CAAEX,cAAc,MAGV,gBAAhBe,EAAEG,OAAOO,GACTtB,SAASC,eAAe,iBAAiBsB,KAAO,WAEhDvB,SAASC,eAAe,qBAAqBsB,KAAO,WAExDnB,EAAKI,SAAS,CAAEX,cAAc,QAItCoB,qBAAuB,WACnB,IAAIlE,EAAWiD,SAASC,eAAe,iBAAiBC,MACpDC,EAAkBH,SAASC,eAAe,qBAAqBC,MAC5C,IAApBnD,EAAS6G,QAA2C,IAA3BzD,EAAgByD,SACpC7G,IAAaoD,GACbH,SAASC,eAAe,iBAAiB4D,UAAY,wBACrD7D,SAASC,eAAe,qBAAqBI,MAAMC,YAAc,MACjEN,SAASC,eAAe,iBAAiBI,MAAME,WAAa,UAC5DH,EAAKI,SAAS,CACV/D,OAAO,OAGmB,IAA3B2D,EAAKV,MAAMwD,cACVlD,SAASC,eAAe,iBAAiB4D,UAAY,wBACrD7D,SAASC,eAAe,iBAAiBI,MAAME,WAAa,UAEhEP,SAASC,eAAe,iBAAiBI,MAAME,WAAa,SAC5DP,SAASC,eAAe,qBAAqBI,MAAMC,YAAc,UACjEF,EAAKI,SAAS,CACV/D,OAAO,SAMvBkE,oBAAsB,SAACC,GACnB,IAEIC,EAFS,sCAEWC,KAAKF,EAAEG,OAAOb,OAEtCE,EAAKI,SAAS,CAAEC,gBAAiBI,IAE5BA,GAQDb,SAASC,eAAe,iBAAiBI,MAAMC,YAAc,UAC7DN,SAASC,eAAe,iBAAiBI,MAAME,WAAa,SAC5DH,EAAKI,SAAS,CACV0C,aAAa,MAVjBlD,SAASC,eAAe,iBAAiBI,MAAMC,YAAc,MAC7DN,SAASC,eAAe,iBAAiB4D,UAAY,sEACrD7D,SAASC,eAAe,iBAAiBI,MAAME,WAAa,UAC5DH,EAAKI,SAAS,CACV0C,aAAa,8EAYrB,OAAQ1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACnBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOjC,KAAMP,KAAKM,MAAMC,KAAMkC,OAAQzC,KAAKgC,YAAaO,UAAU,UAC9DH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACXH,EAAAC,EAAAC,cAACE,EAAA,EAAME,OAAP,KACIN,EAAAC,EAAAC,cAACE,EAAA,EAAMG,MAAP,CAAaT,GAAG,aAAhB,qCAEJE,EAAAC,EAAAC,cAACE,EAAA,EAAMI,KAAP,KACIR,EAAAC,EAAAC,cAAA,OAAKJ,GAAG,aAAR,oCACqCE,EAAAC,EAAAC,cAAA,WADrC,sBAEMF,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAWX,GAAG,eACVE,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACIX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKC,GAAI,GACLb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAaX,UAAU,WACnBL,GAAG,aACHC,KAAK,OACL6C,YAAY,IACZC,UAAU,IACV7B,QAASpD,KAAK+E,aAClB3C,EAAAC,EAAAC,cAACY,EAAA,EAAYG,SAAb,OAEJjB,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKC,GAAI,GACLb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAaX,UAAU,WACnBL,GAAG,aACHC,KAAK,OACL6C,YAAY,IACZC,UAAU,IACV7B,QAASpD,KAAK+E,aAClB3C,EAAAC,EAAAC,cAACY,EAAA,EAAYG,SAAb,OAEJjB,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKC,GAAI,GACLb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAaX,UAAU,WACnBL,GAAG,aACHC,KAAK,OACL6C,YAAY,IACZC,UAAU,IACV7B,QAASpD,KAAK+E,aAClB3C,EAAAC,EAAAC,cAACY,EAAA,EAAYG,SAAb,OAEJjB,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKC,GAAI,GACLb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAaX,UAAU,WACnBL,GAAG,aACHC,KAAK,OACL6C,YAAY,IACZC,UAAU,IACV7B,QAASpD,KAAK+E,aAClB3C,EAAAC,EAAAC,cAACY,EAAA,EAAYG,SAAb,OAEJjB,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKC,GAAI,GACLb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAaX,UAAU,WACnBL,GAAG,aACHC,KAAK,OACL6C,YAAY,IACZC,UAAU,IACV7B,QAASpD,KAAK+E,aAClB3C,EAAAC,EAAAC,cAACY,EAAA,EAAYG,SAAb,OAEJjB,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKC,GAAI,GACLb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAaX,UAAU,WACnBL,GAAG,aACHC,KAAK,OACL6C,YAAY,IACZC,UAAU,IACV7B,QAASpD,KAAK+E,aAClB3C,EAAAC,EAAAC,cAACY,EAAA,EAAYG,SAAb,QAGRjB,EAAAC,EAAAC,cAAA,OAAKJ,GAAG,iBAAR,8BAEJE,EAAAC,EAAAC,cAAA,uCAA8BF,EAAAC,EAAAC,cAAA,QAAMJ,GAAG,SAASsB,QAASxD,KAAK8E,wBAAhC,WAG9B1C,EAAAC,EAAAC,cAAA,OAAKJ,GAAG,iBAAR,yBACAE,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACIT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAWP,UAAU,aAArB,gBACAH,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACIX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKC,GAAI,IACLb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAaX,UAAU,YACnBL,GAAG,gBACHC,KAAK,WACLiB,QAASpD,KAAKuB,oBACd4B,SAAUnD,KAAK4E,0BACnBxC,EAAAC,EAAAC,cAACY,EAAA,EAAYG,SAAb,QAGRjB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAWP,UAAU,aAArB,oBACAH,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACIX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKC,GAAI,IACLb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAaX,UAAU,YACnBL,GAAG,oBACHC,KAAK,WACLiB,QAASpD,KAAK6B,uBAClBO,EAAAC,EAAAC,cAACY,EAAA,EAAYG,SAAb,WAOpBjB,EAAAC,EAAAC,cAACE,EAAA,EAAMc,OAAP,KACIlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQC,QAASxD,KAAKgC,YAAaE,GAAG,kBAAtC,SACAE,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQC,QAASxD,KAAK+D,WAAY7B,GAAG,kBAArC,mBArVYuB,aCmHrByB,6MAhHX5E,MAAQ,CACJC,MAAM,EACNoD,mBAAoB,GACpBC,mBAAoB,GACpBC,mBAAmB,EACnBsB,eAAe,EACfC,cAAc,EACdC,eAAe,KAEnBtB,WAAa,WACTnF,QAAQC,IAAI,SACZe,EAAeoB,EAAKV,MAAMqD,mBAAoB,SAAClF,EAAKF,EAAOH,EAAY+B,GAC/D1B,IACAG,QAAQC,IAAIJ,EAAI6G,MACA,2BAAb7G,EAAI6G,MACHtE,EAAKuE,uBAAsB,GAC3BvE,EAAKI,SAAS,CAAEiE,eAAe,KACb,0BAAb5G,EAAI6G,KACTtE,EAAKwE,EAAEvD,YAAW,GAElBjB,EAAKuE,uBAAsB,GAE/B3G,QAAQC,IAAIT,IAGVK,GAAyB,qBAAXF,IAChBK,QAAQC,IAAI,UAAUN,GACtByC,EAAKI,SAAS,CAAChD,YAAaA,EAAa+B,IAAKA,IAC1Ca,EAAKuE,uBAAsB,SAM3CA,sBAAwB,SAACV,GACrBjG,QAAQC,IAAIgG,IACD,IAARA,EACC7D,EAAKI,SAAS,CAAEgE,cAAc,KAE9BpE,EAAKwE,EAAEvD,YAAW,GAClBjB,EAAKgB,kBAIb2C,QAAU,SAACnD,GACPR,EAAKI,SAAS,CAACqE,gBAAiBjE,GAAG,WAC/B5C,QAAQC,IAAImB,KAAKM,MAAMmF,iBACvB7G,QAAQC,IAAImB,KAAKM,MAAMlC,aACvB6B,EAAyBD,KAAKM,MAAMmF,gBAAgBzF,KAAKM,MAAMsD,mBAAmB5D,KAAKM,MAAMlC,YAAY4B,KAAKM,MAAMH,KACpHH,KAAKwF,EAAExD,mBAIf0D,qBAAuB,SAAClE,GACpBR,EAAKI,SAAS,CAACuC,mBAAoBnC,EAAEG,OAAOb,WAEhD8D,wBAA0B,SAACpD,GACtBR,EAAKI,SAAS,CAACwC,mBAAoBpC,EAAEG,OAAOb,WAGjDkB,YAAc,WACVhB,EAAKI,SAAS,CAAEb,MAAM,IACtBS,EAAKI,SAAS,CAAEgE,cAAc,IAC9BpE,EAAKI,SAAS,CAAEiE,eAAe,OAGnCpD,WAAa,WACTjB,EAAKI,SAAS,CAAEb,MAAM,6EAEnB,IAAAoF,EAAA3F,KACHwF,EAAKpD,EAAAC,EAAAC,cAACsD,EAAD,CAAuBjB,QAAS3E,KAAK2E,QAASC,wBAAyB5E,KAAK4E,wBAAyBb,WAAY/D,KAAK+D,WAAY8B,IAAK,SAAAA,GAAG,OAAIF,EAAKH,EAAIK,KAChK,OAAQzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACnBH,EAAAC,EAAAC,cAAA,OAAKJ,GAAG,sBAAsBsD,GAC9BpD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOjC,KAAMP,KAAKM,MAAMC,KAAMkC,OAAQzC,KAAKgC,YAAaO,UAAU,SAASL,GAAG,mBAC9EE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACHH,EAAAC,EAAAC,cAACE,EAAA,EAAME,OAAP,KACIN,EAAAC,EAAAC,cAACE,EAAA,EAAMG,MAAP,CAAaT,GAAG,mBAAhB,0BAEJE,EAAAC,EAAAC,cAACE,EAAA,EAAMI,KAAP,KACIR,EAAAC,EAAAC,cAAA,OAAKJ,GAAG,aAAR,6BAC8BE,EAAAC,EAAAC,cAAA,WAD9B,mCAEoCF,EAAAC,EAAAC,cAAA,YAEpCF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACIT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAWP,UAAU,aAArB,YACQH,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAaX,UAAU,YACnBL,GAAG,gBACHC,KAAK,OACLrB,MAAOd,KAAKM,MAAMQ,MAClBqC,SAAUnD,KAAK0F,uBACnBtD,EAAAC,EAAAC,cAACY,EAAA,EAAYG,SAAb,QAGfrD,KAAKM,MAAM8E,cACRhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,sCAEHvC,KAAKM,MAAM+E,eACRjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,4BAGRH,EAAAC,EAAAC,cAACE,EAAA,EAAMc,OAAP,KACIlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQC,QAASxD,KAAKgC,YAAaE,GAAG,kBAAtC,SACAE,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQC,QAASxD,KAAK+D,WAAY7B,GAAG,kBAArC,mBAzGAuB,aCOlBqC,EAAMC,EAAQ,KAGdC,6MAEF1F,MAAQ,CACJ2F,OAAO,EACPxF,cAAc,EACdF,MAAM,EACNxC,SAAU,GACVyC,gBAAiB,GACjB0F,MAAM,EACNH,QAAS,GACTI,cAAe,GACfC,cAAe,GACftG,gBAAgB,KAGpBuG,kBAAoB,WAChBzH,QAAQC,IAARyH,OAAAC,EAAA,EAAAD,CAAAtF,IAE2B,KAAxBA,EAAKM,MAAM5D,UAAmBsD,EAAKM,MAAMkF,YACxC5H,QAAQC,IAAI,oBAAqBmC,EAAKM,MAAM5D,UAE5CsD,EAAKyF,cAAc3F,MAAQE,EAAKM,MAAM5D,SACtCsD,EAAK0F,cAAc5F,MAAQE,EAAKM,MAAM3D,UAGjCiB,QAAQC,IAAI,WAEM,KAAvBmC,EAAKM,MAAMqF,SACX3F,EAAKM,MAAMsF,QAAQC,KAAK7F,EAAKM,MAAMwF,aAEvC9F,EAAK+F,kBAAoB/F,EAAK+F,kBAAkBC,KAAvBV,OAAAC,EAAA,EAAAD,CAAAtF,IACzBA,EAAKwF,WAAaxF,EAAKwF,WAAWQ,KAAhBV,OAAAC,EAAA,EAAAD,CAAAtF,IAClBA,EAAKc,qBAAuBd,EAAKc,qBAAqBkF,KAA1BV,OAAAC,EAAA,EAAAD,CAAAtF,IAC5BA,EAAKe,4BAA8Bf,EAAKe,4BAA4BiF,KAAjCV,OAAAC,EAAA,EAAAD,CAAAtF,IACnCA,EAAKL,WAAaK,EAAKL,WAAWqG,KAAhBV,OAAAC,EAAA,EAAAD,CAAAtF,OAMtBiG,iBAAmB,WAAOjG,EAAKI,SAAS,CAAE+E,cAAenF,EAAKyF,cAAc3F,WAC5EoG,iBAAmB,WAAQlG,EAAKI,SAAS,CAAEgF,cAAepF,EAAK0F,cAAc5F,WAG7EqG,SAAW,SAACzJ,EAAUC,GAClBF,EAAiBC,EAAUC,EAAU,SAACc,EAAKF,EAAQwH,EAAS3H,GACpDK,EACiB,0BAAbA,EAAI6G,MAAiD,2BAAb7G,EAAI6G,MAAkD,8BAAb7G,EAAI6G,MAAqD,0BAAb7G,EAAI6G,MACjItE,EAAKI,SAAS,CAAE6E,OAAO,KAKR,qBAAZF,GACP/E,EAAKI,SAAS,CAAE2E,QAASA,EAAS3H,YAAaA,EAAaG,OAAQA,GAAUyC,EAAKoG,sBAKvFpG,EAAKI,SAAS,CAAEuF,QAASpI,EAAO8I,aAAaC,gBAC7CtG,EAAK+F,kBAAkBxI,SAK/BgJ,WAAa,SAAC/F,GACVA,EAAEgG,iBAEF5I,QAAQC,IAAI,OAAQmC,EAAKyF,cAAc3F,OACvCE,EAAKmG,SAAUnG,EAAKyF,cAAc3F,MAAOE,EAAK0F,cAAc5F,UAsBhEiG,kBAAoB,SAAClH,GAEjB4H,IAAMC,IAAI5B,EAAI6B,iBAAmB3G,EAAKyF,cAAc3F,MAChD,CACI8G,QAAS,CAELjB,QAAW9G,EAAEwH,aAAaC,iBAIjCO,KAAK,SAAAtJ,GAGF,IAAIuJ,EAAW,GACfvJ,EAAOwJ,KAAKC,SAASC,aAAaC,IAAI,SAACC,GACR,WAAxBA,EAAQC,cACPN,EAAWK,EAAQL,YAK3B9G,EAAKM,MAAM+G,YAAY9J,EAAOwJ,KAAKC,SAASC,aAAa,SAASH,EAASvJ,EAAOwJ,KAAKC,SAASM,SAAS/J,EAAOwJ,KAAKC,SAASO,iBAC9HvH,EAAKM,MAAMkH,WAAW3I,EAAEwH,aAAaC,cAAetG,EAAKyF,cAAc3F,MAAOE,EAAKM,MAAMkF,WAAaxF,EAAK0F,cAAc5F,MAAQ,MAEnG,KAA3BE,EAAKM,MAAMwF,YACV9F,EAAKM,MAAMsF,QAAQC,KAAK,cAIxB7F,EAAKM,MAAMsF,QAAQC,KAAK7F,EAAKM,MAAMwF,eAI1C2B,MAAM,SAAAjH,GAAO,MAAOA,OAI7BM,qBAAuB,SAACN,GAAD,OAAOR,EAAKI,SAAS,CAAErD,SAAUyD,EAAEG,OAAOb,WAEjEiB,4BAA8B,SAACP,GAAD,OAAOR,EAAKI,SAAS,CAAEZ,gBAAiBgB,EAAEG,OAAOb,WAG/EH,WAAa,WACT/B,QAAQC,IAAI,SAAUmC,EAAKV,OAC3BU,EAAK0H,EAAE1G,cACPlD,EAAOkC,EAAKyF,cAAc3F,MAAOE,EAAK0F,cAAc5F,MAAOE,EAAKV,MAAME,gBAAiBQ,EAAKV,MAAMyF,QAAS/E,EAAKV,MAAMlC,YAAa,SAACK,EAAKF,GACjIE,GACAkK,MAAMlK,EAAI6G,MAEdtE,EAAKI,SAAS,CAAEuF,QAASpI,EAAO8I,aAAaC,gBAC7CtG,EAAK+F,kBAAkBxI,QAK/BmH,qBAAuB,SAAClE,GAAD,OAAOR,EAAKI,SAAS,CAAEuC,mBAAoBnC,EAAEG,OAAOb,WAE3E8D,wBAA0B,SAACpD,GAAD,OAAOR,EAAKI,SAAS,CAAEwC,mBAAoBpC,EAAEG,OAAOb,WAG9EiD,WAAa,WACTnE,EAAeoB,EAAKV,MAAMqD,mBAAoB,SAAClF,EAAKF,GAChD,GAAIE,EAGA,OAFAuC,EAAKI,SAAS,CAAEyC,mBAAmB,GAAS7C,EAAK4H,EAAElH,aACnDiH,MAAMlK,GAGY,qBAAXF,GACPoK,MAAMpK,EAAOsK,SACjB7H,EAAKI,SAAS,CAAEyC,mBAAmB,GAAQ7C,EAAK4H,EAAElH,aAK1D8E,WAAa,SAAChF,GAAD,OAAOR,EAAKM,MAAMwH,cAActH,EAAEG,OAAOoH,YAItD3B,mBAAqB,kBAAMpG,EAAK0H,EAAEzG,gBAGlCnC,eAAiB,kBAAMkB,EAAK4H,EAAE3G,gBAI9B+G,OAAS,WAEL,IAAMC,EAAWjI,EAAKV,MAAM6F,cAAc3B,OAAS,GAAKxD,EAAKV,MAAM8F,cAAc5B,OAAS,GAAOxD,EAAKM,MAAM5D,SAAS8G,OAAQ,EAEzHkE,EAAKtG,EAAAC,EAAAC,cAAC4G,EAAD,CAAapH,qBAAsBd,EAAKc,qBAAsBC,4BAA6Bf,EAAKe,4BAA6BpB,WAAYK,EAAKL,WAAYkF,IAAK,SAAAA,GAAG,OAAI7E,EAAK0H,EAAI7C,KACpL+C,EAAKxG,EAAAC,EAAAC,cAAC6G,EAAD,CAAgBvE,wBAAyB5D,EAAK4D,wBAAyBwE,yBAA0BpI,EAAKoI,yBAA0BrF,WAAY/C,EAAK+C,WAAY2B,qBAAsB1E,EAAK0E,qBAAsB7B,kBAAmB7C,EAAKV,MAAMuD,kBAAmBgC,IAAK,SAAAA,GAAG,OAAI7E,EAAK4H,EAAI/C,KAC7R,OACAzD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKJ,GAAG,eAAewG,EAAGE,GAC1BxG,EAAAC,EAAAC,cAAA,OAAKJ,GAAG,qBACRE,EAAAC,EAAAC,cAAA,OAAKJ,GAAG,eAGRE,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAKR,UAAU,aAAatB,MAAO,CAAEoI,YAAa,SAC9CjH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKsG,GAAI,GAAIC,GAAI,GAAItG,GAAI,EAAGuG,GAAI,GAC5BpH,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACIX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKsG,GAAI,IACLlH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BAAd,mBAGRH,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACIX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKsG,GAAI,GAAIC,GAAI,GAAItG,GAAI,GACrBb,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CAAMlH,UAAU,aACZH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAQC,IAAI,4CACZC,MAAM,OACNC,OAAO,QACP3H,GAAG,OACHK,UAAU,cACVuH,QAAQ,UACRC,SAAS,aACT3H,EAAAC,EAAAC,cAACmH,EAAA,EAAK7G,KAAN,KACIR,EAAAC,EAAAC,cAACmH,EAAA,EAAK9G,MAAN,mBACAP,EAAAC,EAAAC,cAACmH,EAAA,EAAKO,KAAN,uGAIA5H,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ0G,QAAQ,GAAG1H,UAAU,mCAA7B,eAIZH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKsG,GAAI,GAAIC,GAAI,GAAItG,GAAI,GACrBb,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CAAMlH,UAAU,aACZH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAQC,IAAI,4CACZC,MAAM,OACNC,OAAO,QACP3H,GAAG,OACHK,UAAU,cACVuH,QAAQ,UACRC,SAAS,aACT3H,EAAAC,EAAAC,cAACmH,EAAA,EAAK7G,KAAN,KACIR,EAAAC,EAAAC,cAACmH,EAAA,EAAK9G,MAAN,mBACAP,EAAAC,EAAAC,cAACmH,EAAA,EAAKO,KAAN,uGAIA5H,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ0G,QAAQ,GAAG1H,UAAU,mCAA7B,iBAMpBH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKsG,GAAI,GAAIC,GAAI,GAAItG,GAAI,EAAGuG,GAAI,EAAGjH,UAAU,qBAC7CH,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAMhI,GAAG,kBAAkBK,UAAU,oBAAoBtB,MAAO,CAAEkJ,SAAU,QAASP,MAAO,QACpFxH,EAAAC,EAAAC,cAAC4H,EAAA,EAAKE,MAAN,CAAYlI,GAAG,cAAcK,UAAU,kBAAvC,qBACAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAiBH,EAAAC,EAAAC,cAAA,yCAC7BtB,EAAKV,MAAM2F,OACR7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAf,sCAEJH,EAAAC,EAAAC,cAAC4H,EAAA,EAAKG,MAAN,CAAY9H,UAAU,4BAClBH,EAAAC,EAAAC,cAAC4H,EAAA,EAAKE,MAAN,iBACAhI,EAAAC,EAAAC,cAAC4H,EAAA,EAAKI,QAAN,CAAcnI,KAAK,OACf6C,YAAY,WACZa,IAAK,SAAAA,GAAG,OAAI7E,EAAKyF,cAAgBZ,GACjC3D,GAAG,WACHqI,UAAWvJ,EAAKwJ,YAChBrH,SAAUnC,EAAKiG,iBACfwD,aAAczJ,EAAKV,MAAM6F,iBAGjC/D,EAAAC,EAAAC,cAAC4H,EAAA,EAAKG,MAAN,CAAY9H,UAAU,kBAClBH,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACIX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,aAAYH,EAAAC,EAAAC,cAAC4H,EAAA,EAAKE,MAAN,kBAC5BhI,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACIZ,EAAAC,EAAAC,cAAA,UAAQH,KAAK,SAASI,UAAU,2BAA2BiB,QAASxC,EAAKlB,gBAAzE,sBAIRsC,EAAAC,EAAAC,cAAC4H,EAAA,EAAKI,QAAN,CAAcnI,KAAK,WACf6C,YAAY,WACZa,IAAK,SAAAA,GAAG,OAAI7E,EAAK0F,cAAgBb,GACjC3D,GAAG,WACHqI,UAAWvJ,EAAK0J,YAChBvH,SAAUnC,EAAKkG,iBACfuD,aAAczJ,EAAKV,MAAM8F,iBAEjChE,EAAAC,EAAAC,cAAC4H,EAAA,EAAKnH,IAAN,CAAU4H,GAAI,OACVvI,EAAAC,EAAAC,cAAC4H,EAAA,EAAKU,MAAN,CAAYzI,KAAK,WAAW0I,MAAM,cAC9B1H,SAAUnC,EAAKwF,WACfsE,eAAgB9J,EAAKM,MAAMkF,WAC3BtE,GAAG,gBAEXE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC4H,EAAA,EAAKnH,IAAN,CAAU4H,GAAI,OACVvI,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ0G,QAAQ,GAAGc,UAAW9B,EAAUzF,QAASxC,EAAKuG,WAAahF,UAAU,yCAAyCL,GAAG,gBAAzH,+CAzRPuB,aA4VNuH,cAlBS,SAAC1K,GAAU,IAAA2K,EACgC3K,EAAM4K,eAErE,MAAO,CACHxN,SAJ2BuN,EACzBvN,SAIFiJ,QAL2BsE,EACftE,QAKZH,WAN2ByE,EACNzE,WAMrB7I,SAP2BsN,EACMtN,SAOjCmJ,YAR2BmE,EACgBnE,cAWxB,SAAAqE,GAAQ,MAAK,CACpC9C,YAAa,SAACJ,EAAcG,EAAaN,EAAUQ,EAAUC,GAAhD,OAAoE4C,ECnW9E,SAAqBlD,EAAcG,EAAaN,EAAUQ,EAAUC,GAAoB,MAAO,CAAEpG,KAAM,gBAAiB8F,aAAcA,EAAcG,YAAYA,EAAaN,SAASA,EAAUQ,SAAUA,EAAUC,gBAAiBA,GDmW9IF,CAAYJ,EAAcG,EAAaN,EAAUQ,EAAUC,KACrJC,WAAY,SAAC7B,EAASjJ,EAAUC,GAApB,OAAiCwN,ECxW1C,SAAoBxE,EAASjJ,EAAUC,GAAY,MAAO,CAAEwE,KAAM,kBAAmBwE,QAASA,EAASjJ,SAAUA,EAAUC,SAAUA,GDwWlF6K,CAAW7B,EAASjJ,EAAUC,KACpFmL,cAAe,SAACtC,GAAD,OAAgB2E,ECvW5B,SAAuB3E,GAAc,MAAO,CAAErE,KAAM,cAAeqE,WAAYA,GDuW1CsC,CAActC,OAG3CwE,CAA6ChF,GEzWtDxI,EAASuI,EAAQ,IAEjBqF,6MACJ9K,MAAQ,CACJ+K,WAAW,KAGfhF,kBAAoB,WAChBzH,QAAQC,IAAImC,EAAKM,OAEjBN,EAAKM,MAAMgK,WAAW,WAAYtK,EAAKM,MAAM5D,aAIjD6N,WAAa,SAAAF,GACXzM,QAAQC,IAAIwM,GACZrK,EAAKI,SAAS,CAAEiK,iBAGlBrC,OAAS,WACL,OAEE5G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAKtB,EAAKM,MAAM8G,aAChBhG,EAAAC,EAAAC,cAAA,UAAKtB,EAAKM,MAAMiH,gBAAgB7K,UAEhC0E,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,KAAGkJ,KAAOhO,EAAOiO,SAAS,GAAhB,IAA4B9J,OAAO,QACpD6B,QAAW,kBAAMxC,EAAKM,MAAMgK,WAAW,OAAQtK,EAAKM,MAAMwG,YADnD,+CAzBGrE,aAqDPuH,cAlBS,SAAC1K,GAAU,IAAA2K,EACwD3K,EAAM4K,eAE/F,MAAO,CACLjD,aAJ+BgD,EAC3BhD,aAIJG,YAL+B6C,EACb7C,YAKlBN,SAN+BmD,EACAnD,SAM/BQ,SAP+B2C,EACU3C,SAOzCC,gBAR+B0C,EACoB1C,gBAQnD7K,SAT+BuN,EACoCvN,SASnEiJ,QAV+BsE,EAC6CtE,UAarD,SAAAwE,GAAQ,MAAK,IAIzBH,CAA6CI,MCtDzC3H,4BCyBJiI,6MApBX1C,OAAS,WACL,OACI5G,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,KACIvJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,KACIxJ,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAOC,KAAK,aAAa7C,OACrB,SAAC1H,GAAD,OAAWc,EAAAC,EAAAC,cAACwJ,EAADxF,OAAAyF,OAAA,GAAezK,EAAf,CACPgK,WAAYtK,EAAKM,MAAMgK,WACvBU,WAAYhL,EAAKM,MAAM0K,iBAE/B5J,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAOC,KAAK,IAAII,UAAWjG,IAC3B5D,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAOK,UAAWjG,qCAbxBvC,kECPdyI,GAAe,CACfxO,SAAU,GACViJ,QAAS,GACThJ,SAAU,GACV6I,WAAY,GACZ2F,OAAQ,GACRC,OAAQ,GACRC,YAAa,GACbvF,YAAa,GACbmB,aAAc,GACdG,YAAa,GACbN,SAAS,GACTQ,SAAS,IA2CE4C,OAvCf,WAAsD,IAA9B5K,EAA8BgM,UAAA9H,OAAA,QAAA+H,IAAAD,UAAA,GAAAA,UAAA,GAAtBJ,GAAcM,EAAQF,UAAA9H,OAAA,EAAA8H,UAAA,QAAAC,EAClD,OAAQC,EAAOrK,MAEX,IAAK,kBAID,OAFA7B,EAAKgG,OAAAmG,GAAA,EAAAnG,CAAA,GAAOhG,EAAP,CAAcqG,QAAS6F,EAAO7F,QAASjJ,SAAU8O,EAAO9O,SAAUC,SAA8B,OAApB6O,EAAO7O,SAAoB2C,EAAM3C,SAAW6O,EAAO7O,WAIxI,IAAK,cAED,OAAO2I,OAAAmG,GAAA,EAAAnG,CAAA,GACAhG,EADP,CAEIkG,WAAYgG,EAAOhG,aAG3B,IAAK,gBAED,OADA5H,QAAQC,IAAI2N,GACLlG,OAAAmG,GAAA,EAAAnG,CAAA,GACAhG,EADP,CAEI2H,aAAcuE,EAAOvE,aACrBG,YAAaoE,EAAOpE,YACpBN,SAAU0E,EAAO1E,SACjBQ,SAAUkE,EAAOlE,SACjBC,gBAAiBiE,EAAOjE,kBAIhC,IAAK,cACD,OAAOjC,OAAAmG,GAAA,EAAAnG,CAAA,GACAhG,EADP,CAEIwG,YAAa0F,EAAO1F,cAG5B,QACI,OAAOxG,IChDJoM,eAAgB,CAC3BxB,eAAgBA,KCGdyB,GAAgB,CACpBC,IAAK,OACLC,cAGIC,GAAmBC,YAAeJ,GAAeK,IAExCC,GAAA,WACb,IAAIC,EAAQC,YAAYL,IAExB,MAAO,CAAEI,QAAOE,UADAC,YAAaH,KCLzB1P,GAASuI,EAAQ,IAEnBuH,GAAqBvH,EAAQ,KAAiBuH,mBAClD1O,QAAQC,IAAIrB,GAAO+P,WAAa,aAEhC,IAAIV,GAAU,IAAIS,GAAmB9P,GAAO+P,WAAa,0DAMzD,SAAAC,EAA0BZ,GAA1B,IAAAa,EAAA3M,EAAA,OAAA4M,EAAArL,EAAAsL,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACQL,EAAS,WAAc,OAAOZ,GAAQnF,IAAIkF,IADlDgB,EAAAE,KAAA,EAGUjB,GAAQkB,YAAYlG,KAAK4F,GAC1B5F,KAAK,SAAArG,GAAC,OAAEV,EAAMU,IACdiH,MAAM,SAAAjH,GAAM,MAAMA,IAL3B,cAAAoM,EAAAI,OAAA,SAMWlN,GANX,wBAAA8M,EAAAK,SAAAT,6BASAU,IAASlF,OACL5G,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAUjB,MAAOD,KAAiBC,OAC9B9K,EAAAC,EAAAC,cAAC8L,EAAA,EAAD,CAAaC,QAAS,KAAMjB,UAAWH,KAAiBG,WACpDhL,EAAAC,EAAAC,cAACgM,EAAD,CAAKhD,WAjBA,SAACsB,EAAK9L,GAEnB+L,GAAQkB,YAAYlG,KADP,WAAc,OAAOgF,GAAQ0B,IAAI3B,EAAK9L,KAClB2H,MAAM,SAAAjH,GAAM,MAAMA,KAedwK,4DAExBpL,SAASC,eAAe","file":"static/js/main.2c296449.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import AWS from 'aws-sdk'\r\n\r\nimport { CognitoUserPool, CognitoUserAttribute, CognitoUser, AuthenticationDetails } from 'amazon-cognito-identity-js';\r\n\r\nimport config from '../config/config.json'\r\n\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst userPool = new CognitoUserPool(config)\r\n\r\nexport const createUser = (username, email, password, phone_number, callback) => {\r\n    var attributeList = [];\r\n\r\n    var dataUsername = {\r\n        Name: 'preferred_username',\r\n        Value: username\r\n    };\r\n\r\n    var dataEmail = {\r\n        Name: 'email',\r\n        Value: email\r\n    };\r\n\r\n    var dataPhoneNumber = {\r\n        Name: 'phone_number',\r\n        Value: phone_number\r\n    };\r\n\r\n    var attributeUsername = new CognitoUserAttribute(dataUsername);\r\n    var attributeEmail = new CognitoUserAttribute(dataEmail);\r\n    var attributePhoneNumber = new CognitoUserAttribute(dataPhoneNumber);\r\n\r\n    attributeList.push(attributeUsername);\r\n    attributeList.push(attributeEmail);\r\n    attributeList.push(attributePhoneNumber);\r\n\r\n    // Username must be unique in a pool, and cant be a valid email format\r\n    // To log in with email, make sure it is set as an alias attribute in Cognito\r\n    // More info: http://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html#user-pool-settings-usernames\r\n\r\n    userPool.signUp(username, password, attributeList, null, callback)\r\n}\r\n\r\nexport const verifyUser = (username, verifyCode, callback) => {\r\n    const userData = {\r\n        Username: username,\r\n        Pool: userPool,\r\n    }\r\n    const cognitoUser = new CognitoUser(userData)\r\n    cognitoUser.confirmRegistration(verifyCode, true, callback)\r\n}\r\n\r\nexport const resendVerifyCode = (username, callback) => {\r\n    const userData = {\r\n        Username: username,\r\n        Pool: userPool,\r\n    }\r\n    const cognitoUser = new CognitoUser(userData)\r\n    cognitoUser.resendConfirmationCode(callback)\r\n}\r\n\r\nexport const authenticateUser = (username, password, callback) => {\r\n    const authData = {\r\n        Username: username,\r\n        Password: password,\r\n    }\r\n    const authDetails = new AuthenticationDetails(authData)\r\n    const userData = {\r\n        Username: username,\r\n        Pool: userPool,\r\n    }\r\n    const cognitoUser = new CognitoUser(userData)\r\n    cognitoUser.authenticateUser(authDetails, {\r\n        onSuccess: result => {\r\n            //   console.log('access token + ' + result.getAccessToken().getJwtToken())\r\n            //   console.log('id token + ' + result.getIdToken().getJwtToken())\r\n            callback(null, result)\r\n        },\r\n        onFailure: err => {\r\n            callback(err)\r\n        },\r\n        newPasswordRequired: (userAttributes) => {\r\n            console.log(cognitoUser)\r\n            console.log(\"U:\",userAttributes)\r\n            callback(null,null,userAttributes,cognitoUser)\r\n        }\r\n\r\n    })\r\n}\r\n\r\nexport const newPwd = (username,password,newPassword,userAttributes,cognitoUser,callback) => {\r\n    console.log(\"userAttributes: \",userAttributes)\r\n\r\n            console.log(userAttributes)\r\n            delete userAttributes.email_verified;\r\n\r\n            userAttributes.name = username;\r\n            userAttributes.preferred_username = username;\r\n\r\n            // userAttributes = { ...userAttributes, status: 'newPasswordRequired' }\r\n            console.log(cognitoUser)\r\n            console.log(\"username\", username);\r\n            console.log(\"password\", password);\r\n            console.log(\"newPassword\", newPassword);\r\n            console.log(\"userAttributes\", userAttributes);\r\n\r\n                cognitoUser.completeNewPasswordChallenge(newPassword, userAttributes, {\r\n                    onSuccess: result => {\r\n                        var creds = new AWS.Credentials({\r\n                          accessKeyId: config.AWS_ACCESS_KEY, secretAccessKey: config.AWS_SECRET_KEY, sessionToken: null\r\n                        });\r\n                        creds.refresh(err => {\r\n                            if (err) {\r\n                                throw err\r\n                            } else {\r\n                                // do something\r\n                                console.log(\"Success change password.\" , result)\r\n                                callback(null,result)\r\n                                \r\n                            }\r\n                        })\r\n                    },\r\n                    onFailure: err => {\r\n                        console.log(err)\r\n                        callback(null);\r\n                        // throw err\r\n                    }\r\n                })\r\n    }\r\n\r\n\r\n\r\n// export const newPasswordRequired = (username, newPassword, userAttributes, callback) => {\r\n//     const userData = {\r\n//         Username: username,\r\n//         Pool: userPool,\r\n//     }\r\n//     const cognitoUser = new CognitoUser(userData)\r\n\r\n//     cognitoUser.completeNewPasswordChallenge(newPassword, userAttributes, {\r\n//         onSuccess: result => {\r\n//             AWS.config.credentials.refresh(err => {\r\n//                 if (err) {\r\n//                     throw err\r\n//                 } else {\r\n//                     // do something\r\n//                     console.log(result)\r\n//                 }\r\n//             })\r\n//         },\r\n//         newPasswordRequired: (userAttributes, requiredAttributes) => {\r\n//             delete userAttributes.email_verified\r\n//             // phone number as well\r\n//             cognitoUser.completeNewPasswordChallenge(newPassword, userAttributes, this.newPasswordRequired)\r\n//         },\r\n//         onFailure: err => {\r\n//             console.log(err)\r\n//             // throw err\r\n//         }\r\n//     })\r\n// }\r\n\r\n\r\nexport const forgotpassword = (username, callback) => {\r\n    var userData = {\r\n        Username: username,\r\n        Pool: userPool,\r\n    };\r\n    var r = \"\";\r\n    var cognitoUser = new CognitoUser(userData);\r\n    cognitoUser.forgotPassword({\r\n        onSuccess: result => {\r\n            console.log(result)\r\n            r = result;\r\n            callback(null, result,cognitoUser)\r\n        },\r\n        onFailure: err => {\r\n            console.log(err)\r\n            callback(err, null,cognitoUser)\r\n        },\r\n        inputVerificationCode() {\r\n            callback(null, r,cognitoUser,this)\r\n            // var verificationCode = prompt('Please input verification code ', '');\r\n            // var newPassword = prompt('Enter new password ', '');\r\n\r\n            // console.log(\"Checking:\")\r\n            // cognitoUser.confirmPassword(verificationCode, newPassword, this);\r\n        }\r\n    });\r\n}\r\n\r\nexport const requiredVerificationCode = (verificationCode,newPassword,cognitoUser,sth) =>{\r\n    cognitoUser.confirmPassword(verificationCode, newPassword, sth);\r\n}\r\n\r\nexport const signOut = () => {\r\n    userPool.getCurrentUser().signOut()\r\n    // window.location.reload()\r\n}\r\n\r\nexport const getCurrentUser = (callback) => {\r\n    const cognitoUser = userPool.getCurrentUser()\r\n    if (!cognitoUser) return false;\r\n\r\n\r\n    cognitoUser.getSession((err, session) => {\r\n        if (err) {\r\n            console.log(err)\r\n            return\r\n        }\r\n\r\n        cognitoUser.getUserAttributes((err, attributes) => {\r\n            if (err) return console.log(err);\r\n            callback(attributes)\r\n        })\r\n    })\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Modal, FormGroup, FormLabel, Button, FormControl, Row, Col } from 'react-bootstrap';\r\nimport './signin.css';\r\n\r\n\r\nclass NewPwdModal extends Component {\r\n    state = {\r\n        show: false,\r\n        Password: '',\r\n        ConfirmPassword: '',\r\n        showPassword: false,\r\n        ok: true\r\n    }\r\n\r\n    handleSave = () => {\r\n        var password = document.getElementById('pwd_inputText').value;\r\n        var confirmpassword = document.getElementById('con_pwd_inputText').value;\r\n        var ok = this.state.ok;\r\n        if (password !== confirmpassword) {\r\n            document.getElementById('con_pwd_inputText').style.borderColor = \"red\";\r\n            document.getElementById('warningText_4').style.visibility = \"visible\";\r\n            this.setState({\r\n                ok: false\r\n            })\r\n            ok = false;\r\n        } else {\r\n            document.getElementById('warningText_4').style.visibility = \"hidden\";\r\n            document.getElementById('con_pwd_inputText').style.borderColor = \"#707070\";\r\n            if(this.state.password_policy === true){\r\n                ok = true;\r\n            }\r\n        }\r\n\r\n         if(ok !== false){\r\n            this.props.handleSave(); \r\n        }else{\r\n             return;\r\n        }\r\n\r\n    }\r\n\r\n    checkPasswordPolicy = (e) => {\r\n        var regExp = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/;\r\n\r\n        var testResult = regExp.test(e.target.value);\r\n\r\n        this.setState({ password_policy: testResult })\r\n\r\n        if (!testResult) {\r\n            document.getElementById('pwdPolicy').style.color = \"red\";\r\n            document.getElementById('pwd_inputText').style.borderColor = \"red\";\r\n            this.setState({\r\n                ok: false\r\n            })\r\n        } else {\r\n            document.getElementById('pwdPolicy').style.color = \"#969292\";\r\n            document.getElementById('pwd_inputText').style.borderColor = \"#707070\";\r\n        }\r\n    }\r\n\r\n    checkConfirmPassword = () => {\r\n        var password = document.getElementById('pwd_inputText').value;\r\n        var confirmpassword = document.getElementById('con_pwd_inputText').value;\r\n\r\n        if (password !== confirmpassword) {\r\n            document.getElementById('con_pwd_inputText').style.borderColor = \"red\";\r\n            document.getElementById('warningText_4').style.visibility = \"visible\";\r\n            this.setState({\r\n                ok: false\r\n            })\r\n        } else {\r\n            document.getElementById('warningText_4').style.visibility = \"hidden\";\r\n            document.getElementById('con_pwd_inputText').style.borderColor = \"#707070\";\r\n        }\r\n    }\r\n\r\n    //get password and confirm password\r\n    handleChangePassword = (e) => this.props.handleChangePassword(e);\r\n\r\n    handleChangeConfirmPassword = (e) => this.props.handleChangeConfirmPassword(e);\r\n\r\n    handleClose = () => this.setState({ show: false });\r\n\r\n    handleShow = () => this.setState({ show: true });\r\n\r\n    showPassword = (e) => {\r\n        if (this.state.showPassword === false) {\r\n            if (e.target.id === 'mask_icon_1') {\r\n                document.getElementById('pwd_inputText').type = 'text';\r\n            } else {\r\n                document.getElementById('con_pwd_inputText').type = 'text';\r\n            }\r\n\r\n            this.setState({ showPassword: true })\r\n        } else {\r\n            if (e.target.id === 'mask_icon_1') {\r\n                document.getElementById('pwd_inputText').type = 'password';\r\n            } else {\r\n                document.getElementById('con_pwd_inputText').type = 'password';\r\n            }\r\n            this.setState({ showPassword: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<div className='pwd_bg'>\r\n            <Modal show={this.state.show} onHide={this.handleClose} className='pwd_bg'>\r\n                <div className='modal-content newpassword_modal'>\r\n                    <Modal.Header>\r\n                        <Modal.Title id='pwd_title'>Create new password</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div id='pwdPolicy'>\r\n                            8 Characters or longer <br />\r\n                            At least one CAPITAL letter <br />\r\n                            At least one number <br />\r\n                        </div>\r\n                        <br />\r\n                        <form>\r\n                            <FormGroup>\r\n                                <FormLabel className=\"pwd_label\">Password</FormLabel>\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <FormControl className=\"inputText\"\r\n                                            id=\"pwd_inputText\"\r\n                                            type=\"password\"\r\n                                            value={this.state.value}\r\n                                            onChange={this.handleChangePassword}\r\n                                            onKeyUp={this.checkPasswordPolicy} />\r\n                                        <FormControl.Feedback />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <div id=\"warningText_4\">Password is not match</div>\r\n                            <FormGroup>\r\n                                <FormLabel className=\"pwd_label\">Confirm Password</FormLabel>\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <FormControl className=\"inputText\"\r\n                                            id=\"con_pwd_inputText\"\r\n                                            type=\"password\"\r\n                                            value={this.state.value}\r\n                                            onChange={this.handleChangeConfirmPassword}\r\n                                            onKeyUp={this.checkConfirmPassword} />\r\n                                        <FormControl.Feedback />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                        </form>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button onClick={this.handleClose} id='pwd_button_sec'>Close</Button>\r\n                        <Button onClick={this.handleSave} id='pwd_button_pri' >Save</Button>\r\n                    </Modal.Footer>\r\n                </div>\r\n            </Modal>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default NewPwdModal;","import React, { Component } from \"react\";\r\nimport { Modal, FormGroup, FormLabel, Button, FormControl, Row, Col } from 'react-bootstrap';\r\nimport './signin.css';\r\n\r\nclass verificationCodeModal extends Component {\r\n\r\n    state = {\r\n        show: false,\r\n        forgotpwd_username: \"\",\r\n        forgotpwd_password: \"\",\r\n        forgotpwd_user_ok: false,\r\n        ok: false,\r\n        pass_policy: false,\r\n        match: false\r\n    }\r\n\r\n    handleSend = () => {\r\n        var passcode_1 = document.getElementById('passcode_1').value;\r\n        var passcode_2 = document.getElementById('passcode_2').value;\r\n        var passcode_3 = document.getElementById('passcode_3').value;\r\n        var passcode_4 = document.getElementById('passcode_4').value;\r\n        var passcode_5 = document.getElementById('passcode_5').value;\r\n        var passcode_6 = document.getElementById('passcode_6').value;\r\n        var pwd_inputText = document.getElementById('pwd_inputText').value;\r\n        var con_pwd_inputText = document.getElementById('con_pwd_inputText').value;\r\n        if(passcode_1.length === 0){\r\n            document.getElementById('passcode_1').style.borderColor = \"red\";\r\n            this.setState({\r\n                ok: false\r\n            })\r\n        } else {\r\n            document.getElementById('passcode_1').style.borderColor = \"#707070\";\r\n            this.setState({\r\n                ok: true\r\n            })\r\n        }\r\n        if (passcode_2.length === 0) {\r\n            document.getElementById('passcode_2').style.borderColor = \"red\";\r\n            this.setState({\r\n                ok: false\r\n            })\r\n        } else {\r\n            document.getElementById('passcode_2').style.borderColor = \"#707070\";\r\n            this.setState({\r\n                ok: true\r\n            })\r\n        }\r\n        if (passcode_3.length === 0) {\r\n            document.getElementById('passcode_3').style.borderColor = \"red\";\r\n            this.setState({\r\n                ok: false\r\n            })\r\n        } else {\r\n            document.getElementById('passcode_3').style.borderColor = \"#707070\";\r\n            this.setState({\r\n                ok: true\r\n            })\r\n        }\r\n        if (passcode_4.length === 0) {\r\n            document.getElementById('passcode_4').style.borderColor = \"red\";\r\n            this.setState({\r\n                ok: false\r\n            })\r\n        } else {\r\n            document.getElementById('passcode_4').style.borderColor = \"#707070\";\r\n            this.setState({\r\n                ok: true\r\n            })\r\n        }\r\n        if (passcode_5.length === 0) {\r\n            document.getElementById('passcode_5').style.borderColor = \"red\";\r\n            this.setState({\r\n                ok: false\r\n            })\r\n        } else {\r\n            document.getElementById('passcode_5').style.borderColor = \"#707070\";\r\n            this.setState({\r\n                ok: true\r\n            })\r\n        }\r\n        if (passcode_6.length === 0) {\r\n            document.getElementById('passcode_6').style.borderColor = \"red\";\r\n            this.setState({\r\n                ok: false\r\n            })\r\n        } else {\r\n            document.getElementById('passcode_6').style.borderColor = \"#707070\";\r\n            this.setState({\r\n                ok: true\r\n            })\r\n        }\r\n\r\n        if(pwd_inputText.length === 0 || this.state.pass_policy === false){\r\n            document.getElementById('pwd_inputText').style.borderColor = \"red\";\r\n            document.getElementById('warningText_2').innerHTML = \"8 characters or longer. At least one CAPITAL letter and one numbers\";\r\n            document.getElementById('warningText_2').style.visibility = \"visible\";\r\n            this.setState({\r\n                ok: false\r\n            })\r\n        } else {\r\n            document.getElementById('pwd_inputText').style.borderColor = \"#707070\";\r\n            this.setState({\r\n                ok: true\r\n            })\r\n        }\r\n\r\n        if(con_pwd_inputText.length === 0){\r\n            document.getElementById('con_pwd_inputText').style.borderColor = \"red\";\r\n            this.setState({\r\n                ok: false\r\n            })\r\n        }else{\r\n            document.getElementById('con_pwd_inputText').style.borderColor = \"#707070\";\r\n            this.setState({\r\n                ok: true\r\n            })\r\n        }\r\n\r\n        if (pwd_inputText !== con_pwd_inputText) {\r\n                document.getElementById('warningText_2').innerHTML = \"Password is not match\";\r\n                document.getElementById('con_pwd_inputText').style.borderColor = \"red\";\r\n                document.getElementById('warningText_2').style.visibility = \"visible\";\r\n                this.setState({\r\n                    match: false\r\n                })\r\n        } else {\r\n                document.getElementById('con_pwd_inputText').style.borderColor = \"#707070\";\r\n                this.setState({\r\n                    match: true\r\n                },this.handleSaveNewPassword())\r\n        }\r\n    }\r\n    handleSaveNewPassword = () =>{\r\n        if(this.state.ok === true && this.state.match === true && this.state.pass_policy === true){\r\n            var passcode_1 = document.getElementById('passcode_1').value;\r\n            var passcode_2 = document.getElementById('passcode_2').value;\r\n            var passcode_3 = document.getElementById('passcode_3').value;\r\n            var passcode_4 = document.getElementById('passcode_4').value;\r\n            var passcode_5 = document.getElementById('passcode_5').value;\r\n            var passcode_6 = document.getElementById('passcode_6').value;\r\n            this.props.getCode(passcode_1 + passcode_2 + passcode_3 + passcode_4 + passcode_5 + passcode_6)\r\n        }\r\n    }\r\n\r\n    handleChangeNewPassword = (e) => this.props.handleChangeNewPassword(e)\r\n\r\n    handleClose = () => this.setState({ show: false });\r\n\r\n    handleShow = (val) => {\r\n        this.setState({ show: true });\r\n        if (val === false) {\r\n            document.getElementById('passcode_1').style.borderColor = \"red\";\r\n            document.getElementById('passcode_2').style.borderColor = \"red\";\r\n            document.getElementById('passcode_3').style.borderColor = \"red\";\r\n            document.getElementById('passcode_4').style.borderColor = \"red\";\r\n            document.getElementById('passcode_5').style.borderColor = \"red\";\r\n            document.getElementById('passcode_6').style.borderColor = \"red\";\r\n            document.getElementById('warningText_3').style.visibility = \"visible\";\r\n        }\r\n    }\r\n\r\n    resendVerificationCode = () => this.props.handleSend();\r\n\r\n    handleCode = () => {\r\n        document.getElementById('passcode_1').style.borderColor = \"#707070\";\r\n        document.getElementById('passcode_2').style.borderColor = \"#707070\";\r\n        document.getElementById('passcode_3').style.borderColor = \"#707070\";\r\n        document.getElementById('passcode_4').style.borderColor = \"#707070\";\r\n        document.getElementById('passcode_5').style.borderColor = \"#707070\";\r\n        document.getElementById('passcode_6').style.borderColor = \"#707070\";\r\n    }\r\n\r\n    showPassword = (e) => {\r\n        if (this.state.showPassword === false) {\r\n            \r\n            if (e.target.id === 'mask_icon_1') {\r\n                document.getElementById('pwd_inputText').type = 'text';\r\n            } else {\r\n                document.getElementById('con_pwd_inputText').type = 'text';\r\n            }\r\n\r\n            this.setState({ showPassword: true })\r\n        } else {\r\n           \r\n            if (e.target.id === 'mask_icon_1') {\r\n                document.getElementById('pwd_inputText').type = 'password';\r\n            } else {\r\n                document.getElementById('con_pwd_inputText').type = 'password';\r\n            }\r\n            this.setState({ showPassword: false })\r\n        }\r\n    }\r\n\r\n    checkConfirmPassword = () => {\r\n        var password = document.getElementById('pwd_inputText').value;\r\n        var confirmpassword = document.getElementById('con_pwd_inputText').value;\r\n        if(password.length !== 0 && confirmpassword.length !== 0){\r\n            if (password !== confirmpassword) {\r\n                document.getElementById('warningText_2').innerHTML = \"Password is not match\";\r\n                document.getElementById('con_pwd_inputText').style.borderColor = \"red\";\r\n                document.getElementById('warningText_2').style.visibility = \"visible\";\r\n                this.setState({\r\n                    match: false\r\n                })\r\n            } else {\r\n                if(this.state.pass_policy !== false){\r\n                    document.getElementById('warningText_2').innerHTML = \"Password is not match\";\r\n                    document.getElementById('warningText_2').style.visibility = \"hidden\";\r\n                }\r\n                document.getElementById('warningText_2').style.visibility = \"hidden\";\r\n                document.getElementById('con_pwd_inputText').style.borderColor = \"#707070\";\r\n                this.setState({\r\n                    match: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    checkPasswordPolicy = (e) => {\r\n        var regExp = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/;\r\n\r\n        var testResult = regExp.test(e.target.value);\r\n\r\n        this.setState({ password_policy: testResult })\r\n\r\n        if (!testResult) {\r\n            document.getElementById('pwd_inputText').style.borderColor = \"red\";\r\n            document.getElementById('warningText_2').innerHTML = \"8 characters or longer. At least one CAPITAL letter and one numbers\";\r\n            document.getElementById('warningText_2').style.visibility = \"visible\";\r\n            this.setState({\r\n                pass_policy: false\r\n            })\r\n        } else {\r\n            document.getElementById('pwd_inputText').style.borderColor = \"#707070\";\r\n            document.getElementById('warningText_2').style.visibility = \"hidden\";\r\n            this.setState({\r\n                pass_policy: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<div className='pwd_bg' >\r\n            <Modal show={this.state.show} onHide={this.handleClose} className='pwd_bg'>\r\n                <div className='modal-content verification_modal'>\r\n                    <Modal.Header>\r\n                        <Modal.Title id='pwd_title'>Verification Code & New Password</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div id='pwdPolicy'>\r\n                            Please type the verification code<br />sent to your email\r\n                        </div><br />\r\n                        <form>\r\n                            <FormGroup id=\"verify_form\">\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <FormControl className=\"passcode\"\r\n                                            id=\"passcode_1\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"1\"\r\n                                            maxLength=\"1\"\r\n                                            onKeyUp={this.handleCode} />\r\n                                        <FormControl.Feedback />\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <FormControl className=\"passcode\"\r\n                                            id=\"passcode_2\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"2\"\r\n                                            maxLength=\"1\"\r\n                                            onKeyUp={this.handleCode} />\r\n                                        <FormControl.Feedback />\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <FormControl className=\"passcode\"\r\n                                            id=\"passcode_3\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"3\"\r\n                                            maxLength=\"1\"\r\n                                            onKeyUp={this.handleCode} />\r\n                                        <FormControl.Feedback />\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <FormControl className=\"passcode\"\r\n                                            id=\"passcode_4\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"4\"\r\n                                            maxLength=\"1\"\r\n                                            onKeyUp={this.handleCode} />\r\n                                        <FormControl.Feedback />\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <FormControl className=\"passcode\"\r\n                                            id=\"passcode_5\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"5\"\r\n                                            maxLength=\"1\"\r\n                                            onKeyUp={this.handleCode} />\r\n                                        <FormControl.Feedback />\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <FormControl className=\"passcode\"\r\n                                            id=\"passcode_6\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"6\"\r\n                                            maxLength=\"1\"\r\n                                            onKeyUp={this.handleCode} />\r\n                                        <FormControl.Feedback />\r\n                                    </Col>\r\n                                </Row>\r\n                                <div id=\"warningText_3\">Invalid Verification Code</div>\r\n                            </FormGroup>\r\n                            <div>I didn't receive a code! <span id=\"resend\" onClick={this.resendVerificationCode} >\r\n                                Resend\r\n                                        </span></div>\r\n                            <div id=\"warningText_2\">Password is not match</div>\r\n                            <FormGroup>\r\n                                <FormLabel className=\"pwd_label\">New Password</FormLabel>\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <FormControl className=\"inputText\"\r\n                                            id=\"pwd_inputText\"\r\n                                            type=\"password\"\r\n                                            onKeyUp={this.checkPasswordPolicy}\r\n                                            onChange={this.handleChangeNewPassword} />\r\n                                        <FormControl.Feedback />\r\n                                    </Col>\r\n                                </Row>\r\n                                <br />\r\n                                <FormLabel className=\"pwd_label\">Confirm Password</FormLabel>\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <FormControl className=\"inputText\"\r\n                                            id=\"con_pwd_inputText\"\r\n                                            type=\"password\"\r\n                                            onKeyUp={this.checkConfirmPassword} />\r\n                                        <FormControl.Feedback />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                        </form>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button onClick={this.handleClose} id='pwd_button_sec'>Close</Button>\r\n                        <Button onClick={this.handleSend} id='pwd_button_pri' >Send</Button>\r\n                    </Modal.Footer>\r\n                </div>\r\n            </Modal>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default verificationCodeModal;","import React, { Component } from \"react\";\r\nimport { Modal, FormGroup, FormLabel, Button, FormControl } from 'react-bootstrap';\r\nimport './signin.css';\r\nimport { forgotpassword,requiredVerificationCode } from '../cognito/cognito';\r\nimport VerificationCodeModal from './VerificationCodeModal'\r\n\r\nclass ForgotPwd extends Component {\r\n    state = {\r\n        show: false,\r\n        forgotpwd_username: \"\",\r\n        forgotpwd_password: \"\",\r\n        forgotpwd_user_ok: false,\r\n        codemistmatch: false,\r\n        usernotfound: false,\r\n        LimitExceeded: false\r\n    }\r\n    handleSend = () =>{\r\n        console.log(\"hello\")\r\n        forgotpassword(this.state.forgotpwd_username, (err, result,cognitoUser,sth) => {\r\n            if (err) {\r\n                console.log(err.code);\r\n                if(err.code === 'LimitExceededException'){\r\n                    this.showVerificationModal(false)\r\n                    this.setState({ LimitExceeded: true })\r\n                }else if(err.code === 'CodeMismatchException'){\r\n                    this.v.handleShow(false);\r\n                }else{\r\n                    this.showVerificationModal(false)\r\n                }\r\n                console.log(cognitoUser)\r\n                \r\n            }\r\n             if (!err && typeof result !== 'undefined'){\r\n                console.log(\"Result:\",result)\r\n                this.setState({cognitoUser: cognitoUser, sth: sth});\r\n                    this.showVerificationModal(true)\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    showVerificationModal = (val) =>{\r\n        console.log(val)\r\n        if(val === false){\r\n            this.setState({ usernotfound: true })\r\n        }else{\r\n            this.v.handleShow(true);\r\n            this.handleClose();\r\n        }\r\n        \r\n    }\r\n    getCode = (e) =>{\r\n        this.setState({verficationCode: e},function(){\r\n            console.log(this.state.verficationCode)\r\n            console.log(this.state.cognitoUser)\r\n            requiredVerificationCode(this.state.verficationCode,this.state.forgotpwd_password,this.state.cognitoUser,this.state.sth)\r\n            this.v.handleClose();\r\n        })\r\n    }\r\n\r\n    handleChangeUsername = (e) => {\r\n        this.setState({forgotpwd_username: e.target.value })\r\n    }\r\n    handleChangeNewPassword = (e) => {\r\n         this.setState({forgotpwd_password: e.target.value})\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ show: false});\r\n        this.setState({ usernotfound: false });\r\n        this.setState({ LimitExceeded: false })\r\n    }\r\n\r\n    handleShow = () => {\r\n        this.setState({ show: true});\r\n    }\r\n  render() {\r\n    let v = (<VerificationCodeModal getCode={this.getCode} handleChangeNewPassword={this.handleChangeNewPassword} handleSend={this.handleSend} ref={ref => this.v = ref}/>);\r\n    return (<div className='pwd_bg'>\r\n        <div id=\"verification_modal\">{v}</div>\r\n        <Modal show={this.state.show} onHide={this.handleClose} className='pwd_bg' id=\"forgotpwd_modal\">\r\n        <div className='modal-content forgotpwd_modal'>\r\n                    <Modal.Header>\r\n                        <Modal.Title id='forgotpwd_title'>Forgot your password?</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div id='pwdPolicy'>\r\n                            Enter your username below <br/>\r\n                            and we'll get you back on track <br/>\r\n                        </div>\r\n                        <br/>\r\n                        <form>\r\n                            <FormGroup>\r\n                                <FormLabel className=\"pwd_label\">Username</FormLabel>\r\n                                        <FormControl className=\"inputText\"\r\n                                            id=\"pwd_inputText\"\r\n                                            type=\"text\"\r\n                                            value={this.state.value}\r\n                                            onChange={this.handleChangeUsername} />\r\n                                        <FormControl.Feedback />\r\n                            </FormGroup>\r\n                        </form>\r\n                        {this.state.usernotfound && (\r\n                            <div className='text-danger'>Invalid Username/Email or Password</div>\r\n                        )}\r\n                        {this.state.LimitExceeded && (\r\n                            <div className='text-danger'>Please try again later.</div>\r\n                        )}\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button onClick={this.handleClose} id='pwd_button_sec'>Close</Button>\r\n                        <Button onClick={this.handleSend} id='pwd_button_pri' >Send</Button>\r\n                    </Modal.Footer>\r\n                    </div>\r\n                </Modal>\r\n      </div>)\r\n  }\r\n}\r\n\r\nexport default ForgotPwd;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport './../App.css';\r\nimport './signin.css';\r\nimport Iframe from 'react-iframe';\r\n//import { Link} from 'react-router-dom';\r\nimport { Form, Button, Col, Row, Card } from 'react-bootstrap';\r\nimport { setIDToken, setRememberMe, setUserInfo } from '../actions/sessionActions';\r\nimport { connect } from 'react-redux';\r\nimport { authenticateUser, newPwd, forgotpassword} from '../cognito/cognito';\r\nimport NewPwdModal from './NewPwdModal.js';\r\nimport ForgotPassword from './ForgotPwd.js'\r\n\r\nconst api = require('../api/api.local.json');\r\n\r\n\r\nclass Signin extends Component{\r\n\r\n    state = {\r\n        error: false,\r\n        showPassword: false,\r\n        show: false,\r\n        Password: \"\",\r\n        ConfirmPassword: \"\",\r\n        save: false,\r\n        require: \"\",\r\n        usernameValue: \"\",\r\n        passwordValue: \"\",\r\n        forgotPassword: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        console.log(this)\r\n\r\n        if(this.props.username !== \"\" && this.props.rememberMe){\r\n            console.log(\"THIS IS USERNAME \", this.props.username)\r\n\r\n            this.usernameInput.value = this.props.username;\r\n            this.passwordInput.value = this.props.password;\r\n\r\n            // this.authUser (this.props.username, this.props.password)\r\n        }else    console.log(\"NOTHING\")\r\n\r\n        if (this.props.idToken !== '')\r\n            this.props.history.push(this.props.currentPage);\r\n\r\n        this.authorizeUserPool = this.authorizeUserPool.bind(this)\r\n        this.rememberMe = this.rememberMe.bind(this)\r\n        this.handleChangePassword = this.handleChangePassword.bind(this)\r\n        this.handleChangeConfirmPassword = this.handleChangeConfirmPassword.bind(this)\r\n        this.handleSave = this.handleSave.bind(this)\r\n    }\r\n\r\n     \r\n\r\n    //For Enabled Login Button\r\n    onUsernameChange = () =>{ this.setState({ usernameValue: this.usernameInput.value })}\r\n    onPasswordChange = () => { this.setState({ passwordValue: this.passwordInput.value })}\r\n    \r\n\r\n    authUser = (username, password) => {\r\n        authenticateUser(username, password, (err, result, require, cognitoUser) => {\r\n            if (err) {\r\n                if (err.code === 'UserNotFoundException' || err.code === 'NotAuthorizedException' || err.code === 'InvalidParameterException' || err.code === 'UserNotFoundException') {\r\n                    this.setState({ error: true })\r\n                }\r\n                // alert(err.code)\r\n                return;\r\n            }\r\n            if (typeof require !== \"undefined\") {\r\n                this.setState({ require: require, cognitoUser: cognitoUser, result: result }, this.requireNewPassword());\r\n                /*if(this.state.save === true){\r\n                    newPwd(this.usernameInput.value, this.passwordInput.value,this.state.ConfirmPassword,require);\r\n                }*/\r\n            }\r\n            this.setState({ idToken: result.getIdToken().getJwtToken() })\r\n            this.authorizeUserPool(result);\r\n        });\r\n    }\r\n\r\n    //check login by using cognito\r\n    checkLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(\"test\"+ this.usernameInput.value);\r\n        this.authUser (this.usernameInput.value, this.passwordInput.value);\r\n        // authenticateUser(this.usernameInput.value, this.passwordInput.value, (err, result, require, cognitoUser) => {\r\n        //     if (err) {\r\n        //         if (err.code === 'UserNotFoundException' || err.code === 'NotAuthorizedException' || err.code === 'InvalidParameterException' || err.code === 'UserNotFoundException') {\r\n        //             this.setState({ error: true })\r\n        //         }\r\n        //         // alert(err.code)\r\n        //         return;\r\n        //     }\r\n        //     if (typeof require !== \"undefined\") {\r\n        //         this.setState({ require: require, cognitoUser: cognitoUser, result: result }, this.requireNewPassword());\r\n        //         /*if(this.state.save === true){\r\n        //             newPwd(this.usernameInput.value, this.passwordInput.value,this.state.ConfirmPassword,require);\r\n        //         }*/\r\n        //     }\r\n        //     this.setState({ idToken: result.getIdToken().getJwtToken() })\r\n        //     this.authorizeUserPool(result);\r\n        // });\r\n\r\n    }\r\n\r\n    //check login by using db (also check inUse status)\r\n    authorizeUserPool = (r) => {\r\n               \r\n        axios.get(api.webUserManagment + this.usernameInput.value,\r\n            {\r\n                headers: {\r\n                    // 'Content-Type': 'application/json',\r\n                    'idToken': r.getIdToken().getJwtToken()\r\n                }\r\n                \r\n            })\r\n            .then(result => {\r\n                //console.log(\"Result\", result)\r\n                //console.log(result.data.response)\r\n                let roleName = \"\";\r\n                result.data.response.productRoles.map((product) => {\r\n                    if(product.productName === \"aurora\"){\r\n                        roleName = product.roleName;\r\n                    }\r\n                })\r\n\r\n\r\n                this.props.setUserInfo(result.data.response.productRoles,\"aurora\",roleName,result.data.response.allUsers,result.data.response.userInformation);\r\n                this.props.setIDToken(r.getIdToken().getJwtToken(), this.usernameInput.value, this.props.rememberMe ? this.passwordInput.value : null);\r\n\r\n                if(this.props.currentPage === ''){\r\n                    this.props.history.push(\"/dashboard\");\r\n                }\r\n                else{\r\n                    \r\n                    this.props.history.push(this.props.currentPage);\r\n                }\r\n\r\n            })\r\n            .catch(e => { throw (e) })\r\n    }\r\n\r\n    //new password required (first time login)\r\n    handleChangePassword = (e) => this.setState({ Password: e.target.value });\r\n\r\n    handleChangeConfirmPassword = (e) => this.setState({ ConfirmPassword: e.target.value });\r\n\r\n    //save new password (first time login)\r\n    handleSave = () => {\r\n        console.log(\"STATE:\", this.state)\r\n        this.n.handleClose();\r\n        newPwd(this.usernameInput.value, this.passwordInput.value, this.state.ConfirmPassword, this.state.require, this.state.cognitoUser, (err, result) => {\r\n            if (err) {\r\n                alert(err.code);\r\n            }\r\n            this.setState({ idToken: result.getIdToken().getJwtToken() })\r\n            this.authorizeUserPool(result);\r\n        });\r\n    }\r\n\r\n    //for recovering password\r\n    handleChangeUsername = (e) => this.setState({ forgotpwd_username: e.target.value });\r\n\r\n    handleChangeNewPassword = (e) => this.setState({ forgotpwd_password: e.target.value });\r\n\r\n    //save new password (recovering password)\r\n    handleSend = () => {\r\n        forgotpassword(this.state.forgotpwd_username, (err, result) => {\r\n            if (err) {\r\n                this.setState({ forgotpwd_user_ok: false }, this.f.test())\r\n                alert(err);\r\n                return\r\n            }\r\n            if (typeof result !== \"undefined\")\r\n                alert(result.message)\r\n            this.setState({ forgotpwd_user_ok: true }, this.f.test())\r\n\r\n        })\r\n    }\r\n\r\n    rememberMe = (e) => this.props.setRememberMe(e.target.checked)\r\n\r\n\r\n    //new password required modal\r\n    requireNewPassword = () => this.n.handleShow();\r\n\r\n    //recovering password modal\r\n    forgotPassword = () => this.f.handleShow();\r\n\r\n    \r\n\r\n    render = () => {\r\n\r\n        const enabled = (this.state.usernameValue.length > 0 && this.state.passwordValue.length > 0) || (this.props.username.length >0);\r\n\r\n        let n = (<NewPwdModal handleChangePassword={this.handleChangePassword} handleChangeConfirmPassword={this.handleChangeConfirmPassword} handleSave={this.handleSave} ref={ref => this.n = ref} />);\r\n        let f = (<ForgotPassword handleChangeNewPassword={this.handleChangeNewPassword} handleSaveChangePassword={this.handleSaveChangePassword} handleSend={this.handleSend} handleChangeUsername={this.handleChangeUsername} forgotpwd_user_ok={this.state.forgotpwd_user_ok} ref={ref => this.f = ref} />);\r\n        return (\r\n        <div>\r\n            <div id=\"login_modal\">{n}{f}</div>\r\n            <div id=\"login-background\" />\r\n            <div id=\"login-form\"></div>\r\n\r\n\r\n            <Row className=\"signinWrap\" style={{ paddingLeft: '10px' }}>\r\n                <Col xs={12} sm={12} md={7} lg={8}>\r\n                    <Row>\r\n                        <Col xs={12}>\r\n                            <h1>AURORA</h1>\r\n                            <h5 className=\"text-uppercase color-green\">Framework 0.1</h5>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} sm={12} md={6}>\r\n                            <Card className=\"shadow-sm\">\r\n                                <Iframe url=\"https://www.youtube.com/embed/cggc8kNll2M\"\r\n                                width=\"100%\"\r\n                                height=\"450px\"\r\n                                id=\"myId\"\r\n                                className=\"myClassname\"\r\n                                display=\"initial\"\r\n                                position=\"relative\"/>\r\n                                <Card.Body>\r\n                                    <Card.Title>Card Title</Card.Title>\r\n                                    <Card.Text>\r\n                                    Some quick example text to build on the card title and make up the bulk of\r\n                                    the card's content.\r\n                                    </Card.Text>\r\n                                    <Button variant=\"\" className=\"text-uppercase background-green\">Join now</Button>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={6}>\r\n                            <Card className=\"shadow-sm\">\r\n                                <Iframe url=\"https://www.youtube.com/embed/4nfWhWEy2Hc\"\r\n                                width=\"100%\"\r\n                                height=\"450px\"\r\n                                id=\"myId\"\r\n                                className=\"myClassname\"\r\n                                display=\"initial\"\r\n                                position=\"relative\"/>\r\n                                <Card.Body>\r\n                                    <Card.Title>Card Title</Card.Title>\r\n                                    <Card.Text>\r\n                                    Some quick example text to build on the card title and make up the bulk of\r\n                                    the card's content.\r\n                                    </Card.Text>\r\n                                    <Button variant=\"\" className=\"text-uppercase background-green\">Join now</Button>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={12} sm={12} md={5} lg={4} className=\"loginPanel d-flex\">\r\n                <Form id='login-inputForm' className=\"m-auto form-login\" style={{ maxWidth: '350px', width: '80%' }}>\r\n                        <Form.Label id=\"login-title\" className=\"text-uppercase\">Sign in to AURORA</Form.Label>\r\n                        <br/>\r\n                        <p className=\"text-uppercase\"><small>Enter your detail below</small></p>\r\n                        {this.state.error && (\r\n                            <div className='alert alert-danger'>Invalid Username/Email or Password</div>\r\n                        )}\r\n                        <Form.Group className=\"login-inputbox text-left\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                placeholder=\"Username\"\r\n                                ref={ref => this.usernameInput = ref}\r\n                                id=\"username\"\r\n                                onKeyDown={this.getUsername}\r\n                                onChange={this.onUsernameChange}\r\n                                defaultValue={this.state.usernameValue} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"login-inputbox\">\r\n                            <Row>\r\n                                <Col  className=\"text-left\"><Form.Label>Password</Form.Label></Col>\r\n                                <Col>\r\n                                    <button type=\"button\" className=\"btn btn-link color-green\" onClick={this.forgotPassword}>Forgot Password?</button>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <Form.Control type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                ref={ref => this.passwordInput = ref}\r\n                                id=\"password\"\r\n                                onKeyDown={this.getPassword}\r\n                                onChange={this.onPasswordChange}\r\n                                defaultValue={this.state.passwordValue} />\r\n                        </Form.Group>\r\n                        <Form.Row as={\"div\"}>\r\n                            <Form.Check type=\"checkbox\" label=\"Remember Me\"\r\n                                onChange={this.rememberMe}\r\n                                defaultChecked={this.props.rememberMe}\r\n                                id=\"rememberMe\" />\r\n                        </Form.Row>\r\n                        <br />\r\n                        <Form.Row as={\"div\"}>\r\n                            <Button variant=\"\" disabled={!enabled}  onClick={this.checkLogin}  className=\"center background-green text-uppercase\" id=\"login-button\"> Signin </Button>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n\r\n{/* \r\n            <Modal\r\n            show={this.state.forgotPassword}\r\n            onHide={CloseModal}\r\n            aria-labelledby=\"example-modal-sizes-title-sm\"\r\n            >\r\n            <Modal.Header closeButton>\r\n            <Modal.Header>\r\n                <Modal.Title id='forgotpwd_title'>Forgot your password?</Modal.Title>\r\n            </Modal.Header>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div id='pwdPolicy'>\r\n                    Enter your username below <br/>\r\n                    and we'll get you back on track <br/>\r\n                </div>\r\n                <br/>\r\n                <form>\r\n                    <Form.Group>\r\n                        <Form.Label className=\"color-green font-weight-bold text-uppercase\">Username</Form.Label>\r\n                                <Form.Control className=\"inputText\"\r\n                                    id=\"pwd_inputText\"\r\n                                    type=\"text\"\r\n                                    value={this.state.value}\r\n                                    onChange={this.handleChangeUsername} />\r\n                                <Form.Control.Feedback />\r\n                    </Form.Group>\r\n                </form>\r\n                <div id=\"usernotfound\" className=\"text-danger\">User not found</div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={CloseModal}>Close</Button>\r\n                <Button onClick={this.checkLogin} >Send</Button>\r\n            </Modal.Footer>\r\n            </Modal> */}\r\n\r\n            \r\n        </div>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let { username, idToken, rememberMe, password, currentPage } = state.sessionReducer\r\n\r\n    return {\r\n        username: username,\r\n        idToken: idToken,\r\n        rememberMe: rememberMe,\r\n        password: password,\r\n        currentPage: currentPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setUserInfo: (productRoles, productName, roleName, allUsers, userInformation) => dispatch(setUserInfo(productRoles, productName, roleName, allUsers, userInformation)),\r\n    setIDToken: (idToken, username, password) => dispatch(setIDToken(idToken, username, password)),\r\n    setRememberMe: (rememberMe) => dispatch(setRememberMe(rememberMe))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);","export function setIDToken(idToken, username, password) { return { type: 'SET_CREDENTIALS', idToken: idToken, username: username, password: password } }\r\n\r\nexport function setRememberMe(rememberMe) { return { type: 'REMEMBER_ME', rememberMe: rememberMe } }\r\n\r\nexport function setUserInfo(productRoles, productName, roleName, allUsers, userInformation ) { return { type: 'SET_USER_INFO', productRoles: productRoles, productName:productName, roleName:roleName, allUsers: allUsers, userInformation: userInformation } }\r\n\r\nexport function changePage(currentPage) { return { type: 'CHANGE_PAGE', currentPage: currentPage } }","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst config = require('../../config/config.json')\r\n\r\nclass DashApp extends Component {\r\n  state = {\r\n      collapsed: false,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n      console.log(this.props)\r\n      \r\n      this.props.saveCookie('username', this.props.username);\r\n    //   this.props.saveCookie('idToken', this.props.idToken);\r\n  }\r\n\r\n  onCollapse = collapsed => {\r\n    console.log(collapsed);\r\n    this.setState({ collapsed });\r\n  };\r\n\r\n  render = () => {\r\n      return (\r\n\r\n        <div>\r\n          <h1>Dashboard</h1>\r\n          <h2>{this.props.productName}</h2>\r\n          <h2>{this.props.userInformation.username}</h2>\r\n\r\n          <button> <a href={ config.products[0]['url'] } target=\"_self\" \r\n            onClick = {() => this.props.saveCookie('role', this.props.roleName)}>\r\n            MEDIA SUITE \r\n        </a></button>\r\n        </div>\r\n        \r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  let { productRoles, productName, roleName, allUsers, userInformation,username,idToken} = state.sessionReducer\r\n\r\n  return {\r\n    productRoles: productRoles,\r\n    productName: productName,\r\n    roleName:roleName,\r\n    allUsers: allUsers,\r\n    userInformation: userInformation,\r\n    username: username,\r\n    idToken: idToken,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashApp);\r\n","import React, {Component} from 'react';\r\n\r\n\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = collapsed => {\r\n    console.log(collapsed);\r\n    this.setState({ collapsed });\r\n  };\r\n\r\n  render = () => {\r\n      return (\r\n        <div><h1>Hiii</h1></div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, {Component} from 'react';\r\nimport Signin from './components/signin.js'\r\nimport Dashboard from './components/dashBoard/dashboard.js';\r\nimport Main from './components/main/main.js';\r\n\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\n\r\nclass App extends Component {\r\n\r\n    render = () => {\r\n        return (\r\n            <BrowserRouter>\r\n                <div className=\"App\">\r\n                    <Switch>\r\n                        <Route path=\"/dashboard\" render={\r\n                            (props) => <Dashboard {...props} \r\n                                saveCookie={this.props.saveCookie}\r\n                                loadCookie={this.props.loadCookie} /> \r\n                        } />\r\n                        <Route path=\"/\" component={Signin} />\r\n                        <Route component={Signin} />\r\n                    </Switch>\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\n{/* <CookieReader saveCookie={this.props.saveCookie} loadCookie={this.props.loadCookie}/> */}\r\nexport default App;\r\n","var initialState = {\r\n    username: '',\r\n    idToken: '',\r\n    password: '',\r\n    rememberMe: '',\r\n    userId: '',\r\n    dbName: '',\r\n    companyName: '',\r\n    currentPage: '',\r\n    productRoles: '',\r\n    productName: '',\r\n    roleName:'',\r\n    allUsers:''\r\n\r\n}\r\n\r\nfunction sessionReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n\r\n        case 'SET_CREDENTIALS':\r\n            // console.log(action);\r\n            state = {...state, idToken: action.idToken, username: action.username, password: action.password === null ? state.password : action.password}\r\n\r\n            return state\r\n\r\n        case 'REMEMBER_ME':\r\n            // console.log(action);\r\n            return {\r\n                ...state,\r\n                rememberMe: action.rememberMe\r\n            }\r\n\r\n        case 'SET_USER_INFO':\r\n            console.log(action)\r\n            return {\r\n                ...state,\r\n                productRoles: action.productRoles,\r\n                productName: action.productName,\r\n                roleName: action.roleName,\r\n                allUsers: action.allUsers,\r\n                userInformation: action.userInformation\r\n\r\n            }     \r\n\r\n        case 'CHANGE_PAGE':\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }  \r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default sessionReducer;","import { combineReducers } from 'redux'\r\nimport sessionReducer from './sessionReducer'\r\n\r\nexport default combineReducers({\r\n    sessionReducer: sessionReducer\r\n}) ","// configureStore.js\r\nimport { createStore } from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\r\n\r\nimport reducer from './reducers'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer)\r\n\r\nexport default () => {\r\n  let store = createStore(persistedReducer)\r\n  let persistor = persistStore(store)\r\n  return { store, persistor }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n//import App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nimport configureStore from './configureStore'\r\n\r\nconst config = require('./config/config.json')\r\n    \r\nvar CrossStorageClient = require('cross-storage').CrossStorageClient;\r\nconsole.log(config.aurora_url + '/hub.html')\r\n\r\nvar storage = new CrossStorageClient(config.aurora_url + '/hub.html');\r\nvar saveCookie = (key, value) => {\r\n    var setKey = function () { return storage.set(key, value); };\r\n    storage.onConnect().then(setKey).catch(e => {throw e});\r\n}\r\n\r\nasync function loadCookie(key) {\r\n    var getKey = function () { return storage.get(key); };\r\n    var value;\r\n    await storage.onConnect().then(getKey)\r\n        .then(e=>value=e)\r\n        .catch(e => {throw e});\r\n    return value;\r\n}\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore().store}>\r\n        <PersistGate loading={null} persistor={configureStore().persistor}>\r\n            <App saveCookie={saveCookie} loadCookie={loadCookie} />\r\n        </PersistGate>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n\r\n// import configureStore from './configureStore'\r\n\r\n// var CrossStorageClient = require('cross-storage').CrossStorageClient;\r\n// var storage = new CrossStorageClient('http://192.168.1.128:3001/hub.html');\r\n\r\n// var saveCookie = (key, value) => {\r\n//     var setKey = function () { return storage.set(key, value); };\r\n//     storage.onConnect().then(setKey).catch(e => {throw e});\r\n// }\r\n\r\n\r\n\r\n// ReactDOM.render(\r\n// \t<Provider store={configureStore().store}>\r\n//         <PersistGate loading={null} persistor={configureStore().persistor}>\r\n// \t\t\t<App saveCookie={saveCookie} loadCookie={loadCookie} />\r\n// \t\t\t</PersistGate>\r\n//     </Provider>\r\n// \t, document.getElementById('root'));\r\n\r\n//fetch(\"http://localhost:3000/user_manager/getUsers\").then(e => console.log(e))\r\n\r\n// ReactDOM.render(<Main saveCookie={saveCookie} loadCookie={loadCookie} />, document.getElementById('root'));\r\n\r\n// // If you want your app to work offline and load faster, you can change\r\n// // unregister() to register() below. Note this comes with some pitfalls.\r\n"],"sourceRoot":""}